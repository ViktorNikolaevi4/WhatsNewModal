//  WhatsNewModalView.swift
//  –û–∫–Ω–æ ¬´–ß—Ç–æ –Ω–æ–≤–æ–≥–æ¬ª –¥–ª—è macOS (SwiftUI)
//
//  ‚úÖ –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
//  ‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ: –∏–∫–æ–Ω–∫–∞, –∑–∞–≥–æ–ª–æ–≤–æ–∫, –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç.
//  ‚Ä¢ –ß–∏—Ç–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ .md (Markdown) —Ñ–∞–π–ª–∞ –∏ —É–º–µ–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ Markdown.
//  ‚Ä¢ –ö–Ω–æ–ø–∫–∞ ¬´Continue¬ª –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ.
//  ‚Ä¢ (–ù–æ–≤–∞—è —Ñ–∏—á–∞) –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–µ—Ä—ë—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è H1 (`# ...`) –≤ Markdown
//    –∏ —É–¥–∞–ª—è–µ—Ç —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫.
//
//  üîß –ß—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å:
//  1) –î–æ–±–∞–≤—å—Ç–µ Swift Package "MarkdownUI": File ‚Üí Add Packages‚Ä¶ ‚Üí https://github.com/gonzalezreal/MarkdownUI
//  2) –ü–æ–ª–æ–∂–∏—Ç–µ –≤ —Ç–∞—Ä–≥–µ—Ç —Ñ–∞–π–ª WhatsNew.md (–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è) ‚Äî —á—Ç–æ–±—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ Copy Bundle Resources.
//  3) –í Markdown –º–æ–∂–Ω–æ —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —Ñ–∞–π–ª—ã –≤ –±–∞–Ω–¥–ª–µ —Ç–∞–∫: ![](whatsnew-hero.png)
//     –ú—ã –∑–∞–¥–∞—ë–º .markdownImageProvider(.networkImage()) // –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ HTTPS) // –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ HTTPS –∏–∑ Markdown, —á—Ç–æ–±—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ —Ä–∞–±–æ—Ç–∞–ª–∏.

import SwiftUI
import MarkdownUI

// MARK: - –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ¬´–ß—Ç–æ –Ω–æ–≤–æ–≥–æ¬ª
struct WhatsNewModalView: View {
    @Environment(\.dismiss) private var dismiss
    var markdownFileName: String = "WhatsNew"
    var title: String = "–ß—Ç–æ –Ω–æ–≤–æ–≥–æ"
    var preferH1Title: Bool = true
    var icon: NSImage? = NSApp.applicationIconImage

    // –Ω–æ–≤—ã–π –∫–æ–ª–±—ç–∫ ‚Äî –¥–ª—è —Ä–µ–∂–∏–º–∞ overlay
    var onContinue: (() -> Void)? = nil

    @State private var markdownText: String = ""
    @State private var runtimeTitle: String? = nil

    var body: some View {
        VStack(spacing: 20) {
            if let icon {
                Image(nsImage: icon)
                    .resizable()
                    .frame(width: 72, height: 72)
                    .clipShape(RoundedRectangle(cornerRadius: 14, style: .continuous))
                    .shadow(radius: 8)
                    .padding(.top, 8)
            }

            Text(runtimeTitle ?? title)
                .font(.title).bold()
                .padding(.top, 4)

            ScrollView {
                Markdown(markdownText)
                //    .markdownTheme(.gitHub)
                    .frame(maxWidth: 560, alignment: .leading)
                    .padding(.horizontal)
                    .padding(.bottom, 8)
                    .background(.clear)
            }
            .frame(maxHeight: 360)

            Button("Continue") {
                if let onContinue { onContinue() } else { dismiss() }
            }
            .keyboardShortcut(.defaultAction)
            .buttonStyle(PrimaryCapsuleButtonStyle())
            .padding(.bottom, 4)
        }
        .padding(24)
        .frame(minWidth: 640, minHeight: 520)
        .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: .top)
        .background(Color(nsColor: .windowBackgroundColor)) // —Ñ–æ–Ω –≤—Å–µ–≥–æ –æ–≤–µ—Ä–ª–µ—è
        .accessibilityAddTraits(.isModal)
        .onAppear {
            let raw = MarkdownLoader.load(named: markdownFileName)
            if preferH1Title {
                let parts = MarkdownLoader.extractH1AndBody(from: raw)
                runtimeTitle = parts.title ?? runtimeTitle
                markdownText = parts.body
            } else {
                markdownText = raw
            }
        }
    }
}


// MARK: - –°—Ç–∏–ª—å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–ø—Å—É–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏
struct PrimaryCapsuleButtonStyle: ButtonStyle {
    func makeBody(configuration: Configuration) -> some View {
        configuration.label
            .font(.headline)
            .padding(.vertical, 10)
            .padding(.horizontal, 22)
            .background(
                Capsule().fill(Color.accentColor.opacity(configuration.isPressed ? 0.75 : 1))
            )
            .foregroundColor(.white)
    }
}

// MARK: - –ó–∞–≥—Ä—É–∑—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ –∏–∑ Markdown-—Ñ–∞–π–ª–∞ + –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ H1
enum MarkdownLoader {
    /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .md-—Ñ–∞–π–ª–∞ –∏–∑ –±–∞–Ω–¥–ª–∞ –∫–∞–∫ String.
    /// –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫–æ-–ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
    static func load(named: String) -> String {
        guard let url = Bundle.main.url(forResource: named, withExtension: "md") else {
            return "*(–§–∞–π–ª `\(named).md` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–Ω–¥–ª–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.)*"
        }
        do {
            return try String(contentsOf: url, encoding: .utf8)
        } catch {
            return "*(–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å `\(named).md`: \(error.localizedDescription))*"
        }
    }

    /// –î–æ—Å—Ç–∞—ë–º –ø–µ—Ä–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É—Ä–æ–≤–Ω—è H1 (—Å—Ç—Ä–æ–∫–∞, –Ω–∞—á–∏–Ω–∞—é—â–∞—è—Å—è —Å `# `) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
    ///  (title: String?, body: String) ‚Äî –≥–¥–µ body —ç—Ç–æ Markdown –±–µ–∑ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ H1.
    ///  –ü—Ä–∏–º–µ—Ä—ã H1, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–π–º–∞–µ–º: `# –ù–æ–≤–æ–µ –≤ 3.13`, `#   Title` –∏–ª–∏ `# Title ####`.
    static func extractH1AndBody(from markdown: String) -> (title: String?, body: String) {
        var title: String? = nil
        var bodyLines: [String] = []
        let lines = markdown.components(separatedBy: .newlines)

        var skippedHeading = false
        for line in lines {
            if !skippedHeading {
                // –£–±–∏—Ä–∞–µ–º –ª–∏–¥–∏—Ä—É—é—â–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º H1 (–∏–º–µ–Ω–Ω–æ # + –ø—Ä–æ–±–µ–ª)
                let trimmed = line.trimmingCharacters(in: .whitespaces)
                if trimmed.hasPrefix("# ") {
                    // –°–Ω–∏–º–∞–µ–º –≤–µ–¥—É—â–∏–π `# ` –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–∞–≤–µ—Ä—à–∞—é—â–∏–µ #
                    var rawTitle = String(trimmed.dropFirst(2))
                    // –ï—Å–ª–∏ –≤ –∫–æ–Ω—Ü–µ —Å—Ç–æ—è—Ç # (—Å—Ç–∏–ª—å Markdown), —É–¥–∞–ª—è–µ–º –∏—Ö
                    while rawTitle.hasSuffix("#") {
                        rawTitle.removeLast()
                    }
                    title = rawTitle.trimmingCharacters(in: .whitespaces)
                    skippedHeading = true
                    continue // –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É H1 –≤ body
                }
            }
            bodyLines.append(line)
        }
        return (title, bodyLines.joined(separator: "\n"))
    }
}

// MARK: - –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
struct RootView: View {
    @State private var showWhatsNew = true   // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ä–∞–∑—É –¥–ª—è —Ç–µ—Å—Ç–∞

    var body: some View {
        ZStack {
            // —Ç–≤–æ–π –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            ContentView()
                .frame(maxWidth: .infinity, maxHeight: .infinity)
                .disabled(showWhatsNew)              // –±–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ –ø–æ–¥ –º–æ–¥–∞–ª–∫–æ–π
                .blur(radius: showWhatsNew ? 0 : 0)  // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–ª—é—Ä, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å

            if showWhatsNew {
                WhatsNewModalView(
                    markdownFileName: "release-notes",
                    preferH1Title: true,
                    onContinue: { showWhatsNew = false }
                )
                .transition(.opacity) // –∞–∫–∫—É—Ä–∞—Ç–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ/—Å–∫—Ä—ã—Ç–∏–µ
                .zIndex(1)
            }
        }
        .animation(.easeInOut(duration: 0.2), value: showWhatsNew)
    }
}


// –ó–∞–≥–ª—É—à–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
struct ContentView: View {
    var body: some View {
        Text("Main app UI goes here")
            .frame(maxWidth: .infinity, maxHeight: .infinity)
    }
}


/*
=============================
–ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞ WhatsNew.md (–ø–æ–ª–æ–∂–∏—Ç–µ –≤ —Ç–∞—Ä–≥–µ—Ç)
=============================
# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ v1.2

–ü–∏—à–∏—Ç–µ –æ —Å–≤–æ—ë–º –¥–Ω–µ –∏ –¥–æ–±–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –º–µ—Å—Ç–∞ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.

- ‚ú® –ù–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç —Å–µ—Ä–∏—è –ø—Ä–∏–≤—ã—á–µ–∫
- üóìÔ∏è –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –∑–∞–ø–∏—Å–µ–π
- üîí –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è iCloud –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∂—É—Ä–Ω–∞–ª–∞

![–û–±–ª–æ–∂–∫–∞](whatsnew-hero.png)

–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É: [–ü–æ–¥—Ä–æ–±–Ω–µ–µ](https://example.com/whats-new).
*/
